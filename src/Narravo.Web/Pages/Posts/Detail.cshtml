@page "/posts/{slug}"
@using Narravo.Web.Pages
@model PostDetailModel
@{
    ViewData["Title"] = Model.Post?.Title ?? "Post Not Found";
}

@if (Model.Post != null)
{
    <article class="article fade-in">
        <header class="article-header">
            <h1 class="article-title">@Model.Post.Title</h1>
            <div class="article-meta">
                <span>By @Model.Post.Author.DisplayName</span>
                <span>â€¢</span>
                <time datetime="@Model.Post.PublishedUtc?.ToString("yyyy-MM-dd")">
                    @Model.Post.PublishedUtc?.ToString("MMMM dd, yyyy")
                </time>
            </div>
            
            @if (Model.Post.PostTerms.Any())
            {
                <div class="article-tags">
                    @foreach (var postTerm in Model.Post.PostTerms)
                    {
                        <span class="tag">@postTerm.Term.Name</span>
                    }
                </div>
            }
        </header>

        <div class="article-content">
            @Html.Raw(Model.Post.ContentHtml)
        </div>

        @if (Model.Post.Comments.Any())
        {
            <section class="comments">
                <h2 class="comments-title">Comments</h2>
                @foreach (var comment in Model.Post.Comments.Where(c => c.ParentId == null))
                {
                    <div class="comment">
                        <div class="comment-header">
                            <span class="comment-author">@comment.AuthorDisplay</span>
                            <span class="comment-date">
                                @comment.CreatedUtc.ToString("MMM dd, yyyy 'at' h:mm tt")
                            </span>
                        </div>
                        <div class="comment-content">
                            @Html.Raw(comment.BodyHtml)
                        </div>
                        
                        @if (comment.Replies.Any())
                        {
                            <div class="comment-replies">
                                @foreach (var reply in comment.Replies)
                                {
                                    <div class="comment-reply">
                                        <div class="comment-header">
                                            <span class="comment-author">@reply.AuthorDisplay</span>
                                            <span class="comment-date">
                                                @reply.CreatedUtc.ToString("MMM dd, yyyy 'at' h:mm tt")
                                            </span>
                                        </div>
                                        <div class="comment-content">
                                            @Html.Raw(reply.BodyHtml)
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
            </section>
        }
    </article>
}
else
{
    <div class="container">
        <div class="error-page">
            <h1 class="error-title">Post Not Found</h1>
            <p class="error-message">The post you're looking for doesn't exist.</p>
            <a href="/" class="button">Go Home</a>
        </div>
    </div>
}